{
  "hash": "1738a2f0158df22bd4d4802b75fb9ca8",
  "result": {
    "markdown": "---\ntitle: \"Psychometric Analysis\"\nsubtitle: \"INFO 526 - Project 1\"\nauthor: \"Byte Coders\"\nformat: \n  html:\n    code-fold: true\nexecute: \n  warning: false\n  error: false\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) \n  install.packages(\"pacman\")\n\n# use this line for installing/loading\npacman::p_load(devtools) \n\npacman::p_load(tidyverse,\n           openintro,\n           gtable,\n           ggrepel,\n           patchwork,\n           units,\n           readr,\n           gt,         \n           gganimate, \n           gifski,\n           png,\n           ggplot2,\n           ggh4x,\n           ggrepel,\n           ggridges)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Abstract\n\nThe Psychometrics Analysis Project offers a diverse array of interactive Myer Brigs personality tests for fictional characters designed for personal entertainment, these tests aim to provide insights into various aspects of personality assessment It's primary focus is on presenting the types defined by ISTJ and ENFP by understanding these personalities types individuals can gain insights into their own behaviors, preferences and interpersonal dynamics the key traits are associated with each type, emphasizing the diverse ways in which individual interact with the world based on the personality prefrences.\n\n## Introduction\n\nThis project leverages data collected by the Open-Source Pyschometrics Project to reveal the relationship between popular culture and psychology. Through non-orthodox data analysis methods, 890 characters from 100 different universes could be compared and contrasted for their personalities. Each fictional universe denotes a different tv show or movie with popular characters within. While the characters used are fictional, the methods produced by this project will be re-usable and, in theory, applicable to collections of real-world people.\n\n## Question 1:\n\nHow do Myers-Briggs personality types distribute across different universes, and how does the average match percentage vary within each universe? Additionally, is there any correlation between character notability scores and their Myers-Briggs types within each universe?\n\n### Introduction\n\nQuestion one is primarily an exploration of the varying personality types that exist across cultural media. It looks to investigate the differences in character personalities and motivations across differing universes, potentially identifying correlations between genres or settings. Additionally, an attempt to uncover a relationship between popular opinion of characters and their in-universe personas will be made: are anti-heroes liked more? Are villains viewed more negatively than heroes? These questions will be answered providing information about the prevalence and celebration of particular personality types, which enhance our comprehension of audience engagement and storytelling dynamics.\n\n**Approach**\n\nInitially the dataset was loaded from the \\\"TidyTuesday\\\" source using the `read.csv` function in R. The date and location columns were verified to ensure that they are in the correct data types. The dataset containing information about characters is where the Data Collected to visualise various universes and their personality traits from the Open Psychometrics Project website (or you can provide the link), By exploring the data and examining the structure of the dataset to understand its variables and general content. This includes inspecting the Characters, Psychology Stats, and Myers-Briggs tables which performs preprocessing of any necessary data steps, such as handling missing values, data type conversion, and cleaning up variable names Moreover, one of it could be exploring data analysis, distribution of character notability scores across different universes, inquire the distribution of personality traits among characters, including the most common traits and any notable patterns or trends analyzing the average ratings and standard deviations of personality traits to understand the variability within each trait, Exploring the distribution of Myers-Briggs personality types across characters and universes examining the percentage match of Myers-Briggs types and the number of user respondents for each character. To create visualizations to represent key findings from the exploring of data analysis. This could include bar plots, scatter plots, and radar plots to visualize distributions, correlations, and patterns with the notability scores for different types of Myer Briggs personality type, Through interpretation of statistical analysis tests to determine if there are momentous differences in character notability scores between universes there have been some statistical tests conducted to determine each character notability scores and personaltiy traits for Myers-Briggs types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#plotA <- ggplot(data = myers_briggs) + geom_density(aes( group = uni_name, x = avg_match_perc, ))\n\n#plotA\n\n#unique(myers_briggs$uni_name)\n\npacman::p_load(viridis, RColorBrewer)\npacman::p_load(magick, nflplotR)\npacman::p_load(RColorBrewer)\n\n\n\n\nmyers_briggs_grouped <- myers_briggs %>%\n  group_by(char_name) %>%\n    #summarise(max = max(avg_match_perc, na.rm=TRUE))\n    slice_max(avg_match_perc)\n\n\n\n# introverted versus extroverted; sensing versus intuitive; thinking versus feeling; and perceiving versus judging.\n\nmyers_briggs_grouped <- myers_briggs_grouped %>%\n  mutate(\n    socialisation = case_when(\n      substr(myers_briggs, 1, 1) == \"E\" ~ \"Extroverted\",\n      substr(myers_briggs, 1, 1) == \"I\" ~ \"Introverted\"\n    ),\n    empiricism = case_when(\n      substr(myers_briggs, 2, 2) == \"N\" ~ \"Intuitive\",\n      substr(myers_briggs, 2, 2) == \"S\" ~ \"Sensing\"\n    )\n  )\n\n\n\n\nmyers_briggs_linked <- left_join(myers_briggs_grouped, characters, by=c(\"char_name\" = \"name\", \"char_id\" = \"id\", \"uni_id\" = \"uni_id\", \"uni_name\" = \"uni_name\"))\n\nmyers_briggs_linked <- myers_briggs_linked %>%\n  arrange(by = uni_name)\n\n\n\n\n\n\n\n\n\n\nmyersBriggsUniversePlot1 <- ggplot(myers_briggs_linked[starts_with(LETTERS[1:6], vars=myers_briggs_linked$uni_name),]) + geom_col(aes(x = myers_briggs, y = notability, fill = uni_name), size=.8, position=position_dodge()) + theme(axis.title.y = element_blank(), axis.text = element_text(size=6), panel.grid.minor=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), plot.background = element_rect(color = \"white\"), legend.text = element_blank(), legend.position = \"none\", panel.spacing.x = unit(4, \"lines\"), strip.clip = \"off\") + scale_y_continuous(breaks = scales::breaks_width(20)) + labs(title=\"The number of characters that hold the highest correlation to a respective Myers-Briggs Personality Type: \", subtitle=\"Per universe, from universes titled A - F\") + coord_polar() + facet_wrap2(vars(uni_name))\n\n\nmyersBriggsUniversePlot2 <- ggplot(myers_briggs_linked[starts_with(LETTERS[7:13], vars=myers_briggs_linked$uni_name),]) + geom_col(aes(x = myers_briggs, y = notability, fill = uni_name), size=.8, position=position_dodge()) + theme(axis.title.y = element_blank(), axis.text = element_text(size=6), panel.grid.minor=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), plot.background = element_rect(color = \"white\"), legend.text = element_blank(), legend.position = \"none\", panel.spacing.x = unit(4, \"lines\"), strip.clip = \"off\") + scale_y_continuous(breaks = scales::breaks_width(20)) + labs(title=\"The number of characters that hold the highest correlation to a respective Myers-Briggs Personality Type: \", subtitle=\"Per universe, from universes titled G - M\") + coord_polar() + facet_wrap2(vars(uni_name))\n\n\nmyersBriggsUniversePlot3 <- ggplot(myers_briggs_linked[starts_with(LETTERS[14:19], vars=myers_briggs_linked$uni_name),]) + geom_col(aes(x = myers_briggs, y = notability, fill = uni_name), size=.8, position=position_dodge()) + theme(axis.title.y = element_blank(), axis.text = element_text(size=6), panel.grid.minor=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), plot.background = element_rect(color = \"white\"), legend.text = element_blank(), legend.position = \"none\", panel.spacing.x = unit(4, \"lines\"), strip.clip = \"off\") + scale_y_continuous(breaks = scales::breaks_width(20)) + labs(title=\"The number of characters that hold the highest correlation to a respective Myers-Briggs Personality Type: \", subtitle=\"Per universe, from universes titled N - S\") + coord_polar() + facet_wrap2(vars(uni_name))\n\n\nmyersBriggsUniversePlot4 <- ggplot(myers_briggs_linked[starts_with(LETTERS[20:26], vars=myers_briggs_linked$uni_name),]) + geom_col(aes(x = myers_briggs, y = notability, fill = uni_name), size=.8, position=position_dodge()) + theme(axis.title.y = element_blank(), axis.text = element_text(size=6), panel.grid.minor=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), plot.background = element_rect(color = \"white\"), legend.text = element_blank(), legend.position = \"none\", panel.spacing.x = unit(4, \"lines\"), strip.clip = \"off\") + scale_y_continuous(breaks = scales::breaks_width(20)) + labs(title=\"The number of characters that hold the highest correlation to a respective Myers-Briggs Personality Type: \", subtitle=\"Per universe, from universes titled T - Z\") + coord_polar() + facet_wrap2(vars(uni_name))\n\n\n\n\n\nggsave(\"data/universePlot.png\", myersBriggsUniversePlot1, width = 20, height = 15, units = c(\"in\"))\nggsave(\"data/universePlot2.png\", myersBriggsUniversePlot2, width = 20, height = 15, units = c(\"in\"))\nggsave(\"data/universePlot3.png\", myersBriggsUniversePlot3, width = 20, height = 15, units = c(\"in\"))\nggsave(\"data/universePlot4.png\", myersBriggsUniversePlot4, width = 20, height = 15, units = c(\"in\"))\n\n\n\n\n\n\n\n\nnotabilityScores_TheWalkingDead <- ggplot(myers_briggs_linked[myers_briggs_linked$uni_name %in% c(\"The Walking Dead\"),], aes()) + theme_minimal() + geom_jitter(aes(x = myers_briggs, y = notability, pch=socialisation), position = position_jitter(seed=3))  + theme(plot.background = element_rect(color = \"white\"), axis.text = element_text(size=6), panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text.x = element_text(), panel.grid.major.x = element_blank()) + scale_y_continuous(breaks = scales::breaks_width(10)) + labs(title=\"Plot of the number of characters that are\\npredominantly of a chosen personality type: \", subtitle=\"From The Walking Dead universe, with percentage match to said personality type highlighted\", x = \"Myers Briggs Personality Type\", y = \"Notability Score\", caption=\"pm = Percentage match for that character\", pch = \"Socialisation\") + geom_text_repel( aes( label=paste(\"pm=\",avg_match_perc), x = myers_briggs, y = notability), size=3, vjust=-1, position = position_jitter(seed=3)) +geom_vline(xintercept=seq(0.5,after_stat(nrow(myers_briggs)),1),color=\"#FFAAFF\", alpha = .5)\n\n\nnotabilityScores_TheWalkingDead\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Question-One-A-1.png){width=672}\n:::\n\n```{.r .cell-code}\nnotabilityMeans_TheWalkingDead <- ggplot(filter(myers_briggs_linked, uni_name == \"The Walking Dead\"), aes(group = myers_briggs, x = myers_briggs)) + theme_minimal() + geom_bar(aes( y = notability, fill = myers_briggs), width=.4, stat=\"summary\", fun=\"mean\", colour=\"black\", size = 0.2) + theme(plot.background = element_rect(color = \"white\"),  panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text = element_text(size=6), panel.grid.major.x = element_blank(), legend.position = \"none\") + scale_y_continuous(breaks = scales::breaks_width(10), expand = expand_scale(c(0,0), c(0,35))) + labs(title=\"Plot of the number of characters that are\\npredominantly of a chosen personality type: \", subtitle=\"From The Walking Dead universe, with mean notability score for said personality type highlighted\", x = \"Myers Briggs Personality Type\", y = \"Notability Score\") +geom_vline(xintercept=seq(0.5,after_stat(nrow(myers_briggs)),1),color=\"#FFAAFF\", alpha = .5) + stat_summary(geom=\"text\", fun = \"mean\", aes(label=floor(after_stat(y)), x = myers_briggs, y = notability), size = 2, vjust= -2) + geom_from_path(aes(x = myers_briggs, y=95, path = image_link, group=myers_briggs), width = .2, height = .2, vjust= -.2) + scale_fill_brewer(palette = \"YlOrBr\")\n\nnotabilityMeans_TheWalkingDead\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Question-One-A-2.png){width=672}\n:::\n\n```{.r .cell-code}\nnotabilityScores_GameOfThrones <- ggplot(myers_briggs_linked[myers_briggs_linked$uni_name %in% c(\"Game of Thrones\"),], aes()) + theme_minimal() + geom_jitter(aes(x = myers_briggs, y = notability, pch=socialisation), position = position_jitter(seed=3))  + theme(plot.background = element_rect(color = \"white\"), axis.text = element_text(size=6), panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text.x = element_text(), panel.grid.major.x = element_blank()) + scale_y_continuous(breaks = scales::breaks_width(10)) + labs(title=\"Plot of the number of characters that are\\npredominantly of a chosen personality type: \", subtitle=\"From the Game of Thrones universe, with percentage match to said personality type highlighted\", x = \"Myers Briggs Personality Type\", y = \"Notability Score\", caption=\"pm = Percentage match for that character\", pch = \"Socialisation\") + geom_text_repel( aes( label=paste(\"pm=\",avg_match_perc), x = myers_briggs, y = notability), size=3, vjust=-1, position = position_jitter(seed=3)) +geom_vline(xintercept=seq(0.5,after_stat(nrow(myers_briggs)),1),color=\"#FFAAFF\", alpha = .5)\n\n\nnotabilityScores_GameOfThrones\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Question-One-A-3.png){width=672}\n:::\n\n```{.r .cell-code}\nnotabilityMeans_GameOfThrones<- ggplot(filter(myers_briggs_linked, uni_name == \"Game of Thrones\"), aes(group = myers_briggs, x = myers_briggs)) + geom_bar(aes( y = notability, fill = myers_briggs), width=.4, stat=\"summary\", fun=\"mean\", colour=\"black\", size = 0.2) + theme_minimal() + theme(plot.background = element_rect(color = \"white\"),  panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text = element_text(size=6), panel.grid.major.x = element_blank(), legend.position = \"none\") + scale_y_continuous(breaks = scales::breaks_width(10), expand = expand_scale(c(0,0), c(0,20))) + labs(title=\"Plot of the number of characters that are\\npredominantly of a chosen personality type: \", subtitle=\"From the Game of Thrones universe, with mean notability score for said personality type highlighted\", x = \"Myers Briggs Personality Type\", y = \"Notability Score\") +geom_vline(xintercept=seq(0.5,after_stat(nrow(myers_briggs)),1),color=\"#FFAAFF\", alpha = .5) + stat_summary(geom=\"text\", fun = \"mean\", aes(label=floor(after_stat(y)), x = myers_briggs, y = notability), size = 2, vjust= -2) + geom_from_path(aes(x = myers_briggs, y=95, path = image_link, group=myers_briggs), width = .2, height = .2) + scale_fill_brewer(palette = \"Blues\")\n\n\nnotabilityMeans_GameOfThrones\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Question-One-A-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"data/notabilityScores_TheWalkingDead.png\", notabilityScores_TheWalkingDead, width = 9, height = 5, units = c(\"in\"))\nggsave(\"data/notabilityMeans_TheWalkingDead.png\", notabilityMeans_TheWalkingDead, width = 9, height = 5, units = c(\"in\"))\nggsave(\"data/notabilityScores_GameOfThrones.png\", notabilityScores_GameOfThrones,width = 9, height = 5, units = c(\"in\"))\nggsave(\"data/notabilityMeans_GameOfThrones.png\", notabilityMeans_GameOfThrones, width = 9, height = 5, units = c(\"in\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmyers_briggs_mean_notability <- myers_briggs_linked %>%\n group_by(uni_name, myers_briggs) %>%\n  summarise(\n      mean = mean(notability),\n      socialisation = socialisation,\n      empiricism = empiricism\n  ) %>%\n  filter(mean == max(mean))\n\n\n\n#g11 <- ggplot(myers_briggs_mean_notability) + geom_bar(aes(x = myers_briggs, fill = myers_briggs)) + theme(  panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text = element_text(size=6), panel.grid.major.x = element_blank(), legend.position = \"none\") + scale_y_continuous(breaks = scales::breaks_width(2), expand = expand_scale(c(0,0), c(0,4))) + labs(title=\"Count of the myers-briggs type correlated to the highest mean notability scores\", subtitle=\"From every universe\", x = \"Myers Briggs Personality Type\", y = \"Count\") + geom_text( aes( label=after_stat(count), x = myers_briggs, y = after_stat(count)), vjust=-1, size = 3, stat=\"count\")\n#g11\n\n\nmyers_briggs_mean_notability <- myers_briggs_mean_notability %>%\n  mutate(Network = case_when(\n    uni_name %in% c(\"Game of Thrones\", \"True Detective\", \"Euphoria\", \"The Sopranos\", \"Westworld\", \"The Wire\", \"Watchmen\", \"Succession\", \"Silicon Valley\") ~ \"HBO\",\n    uni_name %in% c(\"Breaking Bad\", \"Better Call Saul\", \"Mad Men\", \"The Walking Dead\", \"\") ~ \"AMC\",\n    TRUE ~ \"Other\"\n  ))\n\n\n\nmyers_briggs_grouped_notability <- myers_briggs_linked %>%\n group_by(uni_name, myers_briggs) %>%\n  summarise(\n      notability = (notability),\n      socialisation = socialisation,\n      empiricism = empiricism\n  )\n\nmyers_briggs_grouped_notability <- myers_briggs_grouped_notability %>%\n  mutate(Network = case_when(\n    uni_name %in% c(\"Game of Thrones\", \"True Detective\", \"Euphoria\", \"The Sopranos\", \"Westworld\", \"The Wire\", \"Watchmen\", \"Succession\", \"Silicon Valley\") ~ \"HBO\",\n    uni_name %in% c(\"Breaking Bad\", \"Better Call Saul\", \"Mad Men\", \"The Walking Dead\") ~ \"AMC\",\n    TRUE ~ \"Other\"\n  ))\n\n\n\ng12 <- ggplot(myers_briggs_grouped_notability) + geom_bar(aes(x = myers_briggs, fill = Network, y = notability), stat=\"summary\", fun = \"mean\", position = position_dodge(.9), width = .5, colour=\"black\", size = 0.2) + theme_minimal() + theme(plot.background = element_rect(color = \"white\"),  panel.grid.minor.y=element_blank(), title = element_text(size=11), plot.subtitle = element_text(size=10), axis.text = element_text(size=9), panel.grid.major.x = element_blank(), ) + scale_y_continuous(breaks = scales::breaks_width(10), expand = expand_scale(c(0,0), c(0,4))) + labs(title=\"Count of the myers-briggs type correlated to\\nthe highest mean notability scores\", subtitle=\"From every universe\", x = \"Myers Briggs Personality Type\", y = \"Mean notability\") + facet_wrap2(vars(socialisation), scales = \"free_x\", nrow = 2) + scale_fill_brewer(palette = \"YlOrRd\") + scale_x_discrete(expand=(c(.1,.1))) + geom_vline(xintercept=seq(0.5,after_stat(nrow(myers_briggs)),1),color=\"#FFAAFF\", alpha = .5)\ng12\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncategorize_personality <- function(personality_trait) {\n  # Convert personality trait to lowercase\n  personality_trait <- tolower(personality_trait)\n  \n  # Define categories and corresponding personality traits\n  categories = c(\n    \"Social Traits\",\n    \"Emotional Traits\",\n    \"Intellectual Traits\",\n    \"Assertive Traits\",\n    \"Adventurous Traits\",\n    \"Balanced Traits\",\n    \"Other Traits\"\n  )\n  category_map <- list(\n    \"Social Traits\" = c(\n      \"friendly\", \"sociable\", \"warm-hearted\", \"kind\", \"sympathetic\", \n      \"compassionate\", \"understanding\", \"tolerant\", \"patient\", \"generous\", \n      \"helpful\", \"considerate\", \"cooperative\", \"empathetic\", \"supportive\", \n      \"cheerful\", \"humorous\", \"optimistic\", \"enthusiastic\", \"affectionate\"\n    ),\n    \"Emotional Traits\" = c(\n      \"calm\", \"confident\", \"self-confident\", \"self-disciplined\", \"patient\", \n      \"perceptive\", \"sensitive\", \"thoughtful\", \"insightful\", \"intuitive\", \n      \"open-minded\", \"honest\", \"trustworthy\", \"dependable\", \"reliable\", \n      \"responsible\", \"mature\", \"modest\", \"humble\", \"sincere\"\n    ),\n    \"Intellectual Traits\" = c(\n      \"analytical\", \"creative\", \"innovative\", \"intelligent\", \"curious\", \n      \"imaginative\", \"logical\", \"rational\", \"thoughtful\", \"knowledgeable\", \n      \"insightful\", \"wise\", \"intellectual\", \"independent\", \"introspective\", \n      \"methodical\", \"organized\", \"practical\", \"resourceful\"\n    ),\n    \"Assertive Traits\" = c(\n      \"assertive\", \"determined\", \"ambitious\", \"tenacious\", \"resilient\", \n      \"goal-oriented\", \"driven\", \"confident\", \"courageous\"\n    ),\n    \"Adventurous Traits\" = c(\n      \"adventurous\", \"daring\", \"bold\", \"risk-taker\", \"spontaneous\", \"energetic\"\n    ),\n    \"Balanced Traits\" = c(\n      \"balanced\", \"flexible\", \"adaptable\", \"versatile\", \"well-rounded\"\n    ),\n    \"Other Traits\" = c(\n      \"eccentric\", \"quirky\", \"unique\", \"eccentric\", \"unconventional\", \"nonconformist\"\n    )\n  )\n  \n  # Find the category for the given personality trait\n  for (category in categories) {\n    if (personality_trait %in% category_map[[category]]) {\n      return(category)\n    }\n  }\n  \n  return(\"Unknown\")  # Return \"Unknown\" if the personality trait doesn't match any category\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncharacters$char_id = characters$id\n\npsych_stats$personality_category <- sapply(psych_stats$personality, categorize_personality)\n\npersonalityDistribution <- psych_stats |>\n  count(personality_category)\n\npersonalityDistribution = subset(personalityDistribution, personality_category != \"Unknown\")\n\ncharactersFiltered = characters |>\n  select(char_id, notability)\n\npsychStatsFiltered = psych_stats |>\n  select(char_id, personality_category, avg_rating)\n\npsychStatsCharacters = merge(charactersFiltered, psychStatsFiltered, by = \"char_id\")\n\npsychStatsCharactersSubset = subset(psychStatsCharacters, personality_category != \"Unknown\")\n\navgRating = psychStatsCharacters |>\n  group_by(personality_category) |>\n  summarise(avg_rating = mean(avg_rating))\n\navgNotability = psychStatsCharacters |>\n  group_by(personality_category) |>\n  summarise(avg_notability = mean(notability))\n\n\npsychStatsCharactersMerged = merge(personalityDistribution, \n                                   avgRating, \n                                   by = \"personality_category\")\n\npsychStatsCharactersMerged = merge(psychStatsCharactersMerged,\n                                   avgNotability,\n                                   by = \"personality_category\")\n\n\n\n\npersonalityDistribution <- subset(personalityDistribution, personality_category != \"Unknown\")\n\navgRating <- subset(avgRating, personality_category != \"Unknown\")\n\navgNotability <- subset(avgNotability, personality_category != \"Unknown\")\n\nggplot(personalityDistribution, \n       aes(x = factor(\nfct_rev(fct_inorder(personality_category))), y = n)) +\n  geom_bar(stat = \"identity\", aes(fill=(personality_category)), color = \"black\") + scale_fill_brewer(palette = \"Reds\") + labs(title = \"Frequency distribution of character personality traits\",\n       x = \"Personality Traits\",\n       y = \"Frequency\")  +\n  coord_flip() +\n  theme_minimal()+\n  theme(axis.text.x = element_text( hjust = 1),\n        plot.title = element_text(hjust = 0.5), legend.position = \"none\") + geom_label(aes(x=(factor(fct_rev(fct_inorder(personality_category)))),    y = n, label=floor(n), hjust = ifelse(personality_category==\"Intellectual Traits\",1.2, -.1)), , color = \"black\", alpha = .7)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/question 2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(avgRating, aes(x = factor(\n                            fct_rev(\n                              fct_inorder(\n                                personality_category))), \n                      y = avg_rating)) +\n  geom_bar(stat = \"identity\", \n           aes(fill = (personality_category)), \n           color = \"black\") +\n  labs(title = \"Average rating by character personality traits\",\n       x = \"Personality Traits\",\n       y = \"Average Rating\")  +\n  coord_flip() +\n  theme_minimal() + \n  scale_fill_brewer(palette = \"YlOrBr\")+\n  theme(axis.text.x = element_text(hjust = 1),\n        plot.title = element_text(hjust = 0.5), \n        legend.position = \"none\") + \n  geom_label(aes(x = (\n                  factor(\n                    fct_rev(\n                      fct_inorder(\n                        personality_category)))), \n                  y = avg_rating, \n                  label = floor(avg_rating)), \n             hjust = 2.5, color = \"black\", \n             alpha = .7)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/question 2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(avgNotability, aes(x = factor(fct_rev(fct_inorder(personality_category))), y = avg_notability)) +\n  geom_bar(stat = \"identity\", aes(fill= (personality_category)), color = \"black\") +\n  labs(title = \"Average notability by character personality traits\",\n       x = \"Personality Traits\",\n       y = \"Average Notability\")  +\n  coord_flip() +\n  theme_minimal() + scale_fill_brewer(palette = \"Purples\")+\n  theme(axis.text.x = element_text( hjust = 1),\n        plot.title = element_text(hjust = 0.5), legend.position = \"none\") + geom_label(aes(x=(factor(fct_rev(fct_inorder(personality_category)))),    y = avg_notability, label=floor(avg_notability)), hjust = 2.5, color = \"black\", alpha = .7)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/question 2-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(psychStatsCharactersSubset, aes(x = avg_rating)) +\n  geom_density(aes(fill = personality_category), alpha = .7) +\n  facet_wrap(~personality_category, dir = \"v\") +\n  theme_minimal() + scale_fill_brewer(palette = \"Greens\") + scale_y_continuous(breaks = seq(0,0.04, 0.04)) + theme(legend.position = \"none\", axis.text.x=element_text(angle = c(45,rep(0,4),45))) + labs(title=\"Density plot of grouped personality traits\", x=\"Average Rating\", y=\"Density\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/question 2-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(psychStatsCharactersSubset, aes(x = avg_rating, y=factor(fct_rev((personality_category))))) +\n  geom_density_ridges(aes(fill = factor(fct_rev(personality_category))), alpha = .6) + theme_minimal() + theme(legend.position = \"none\", plot.background = element_rect(color=\"white\")) + labs(title=\"Density ridges plot of grouped personality traits\", x=\"Average Rating\", y=\"Grouped Personality Traits\") + scale_fill_brewer(palette = \"Greens\") + geom_vline(xintercept=100 ,color=\"black\", alpha = .7, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/question 2-5.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}